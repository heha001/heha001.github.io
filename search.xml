<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>闲聊</title>
      <link href="/2022/11/11/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/11/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="22-11-11-天气多云"><a href="#22-11-11-天气多云" class="headerlink" title="22-11-11 天气多云"></a>22-11-11 天气多云</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>本来想将博客搭建到服务器上，但是出现了很多问题没有解决</p><h4 id="错误-1"><a href="#错误-1" class="headerlink" title="错误 1"></a>错误 1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Permission denied, please try again</span><br></pre></td></tr></table></figure><p>在服务器创建用户后，用这个用户连接，没有权限，不知道怎么解决，后面用 root 直接连接，把博客文件传到服务器，但是不能用公网 ip 访问。</p><h4 id="错误-2"><a href="#错误-2" class="headerlink" title="错误 2"></a>错误 2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please make sure you have the correct access rights and the repository exists.</span><br></pre></td></tr></table></figure><h4 id="错误-3"><a href="#错误-3" class="headerlink" title="错误 3"></a>错误 3</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (E:\BKXM\bk\blog-demo\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:527:28)</span><br><span class="line">      at ChildProcess.cp.emit (E:\BKXM\bk\blog-demo\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure><h4 id="错误-3-解决方法"><a href="#错误-3-解决方法" class="headerlink" title="错误 3 解决方法"></a>错误 3 解决方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">删除名为.deploy_git的文件夹，rm -rf .deploy_git</span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line">hexo c;hexo g;hexo d</span><br></pre></td></tr></table></figure><p>最后直接在 GitHub 拉取文件，可以用公网 ip 访问，但是不能实时更新，需要手动拉去 GitHub 文件</p><blockquote><p><a href="http://43.139.12.60/">http://43.139.12.60/</a><br>hehao.love<br>heha001.github.io</p></blockquote><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>论文进度++</p>]]></content>
      
      
      <categories>
          
          <category> 杂物 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>闲聊</title>
      <link href="/2022/11/10/%E7%AC%AC%E5%8D%81%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/10/%E7%AC%AC%E5%8D%81%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="2022-11-10-天气晴"><a href="#2022-11-10-天气晴" class="headerlink" title="2022-11-10 天气晴"></a>2022-11-10 天气晴</h2><p>买了服务器和域名，贫穷的我雪上加霜。<br>论文进度++<br>程序完善++<br>金币–</p>]]></content>
      
      
      <categories>
          
          <category> 杂物 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>闲聊</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%B9%9D%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%B9%9D%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="太难了啊"><a href="#太难了啊" class="headerlink" title="太难了啊"></a>太难了啊</h2><p>完成了博客的一部分内容，论文进度无。<br>工作也不好找，麻了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂物 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VUE</title>
      <link href="/2022/11/09/%E7%AC%AC%E5%85%AB%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E5%85%AB%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="还没写"><a href="#还没写" class="headerlink" title="还没写"></a>还没写</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%B8%83%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%B8%83%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>1、typeof + 变量名<br>2、prompt 取到的内容是 string 类型的<br>3、转换字符串型<br>变量名.tostring()<br>变量名+’‘ (推荐)<br>4、转换数字型<br>parselnt(string)，能把字符串取整输出，会去掉 px 单位<br>parseFloat(string)<br>string-0 运算符起转换效果(+-*/)</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>1、== 默认转换数据类型<br>2、逻辑与短路运算<br>如果表达式 1 为真 则返回表达式 2<br>如果表达式 1 为假 则返回表达式 1<br>3、逻辑或短路运算<br>如果表达式 1 为真 则返回表达式 1<br>如果表达式 1 为假 则返回表达式 2</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>1、arguments 函数内部的一个属性，是一个存放所有实参的数组<br>2、匿名函数定义： var fn = function(){} fn 是变量名不是函数名</p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>1、定义全局变量，特殊情况：在函数内部没有声明直接赋值的变量也属于全局变量<br>2、作用域链：内部函数访问外部函数的变量，采取链式访问，就近原则</p><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><p>1、变量(函数)提升到当前作用域的最前端<br>2、面试题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">f1();</span><br><span class="line">console.log(c);</span><br><span class="line">console.log(b);</span><br><span class="line">console.log(a);</span><br><span class="line">function f1() &#123;</span><br><span class="line">    var a = b = c = 9;</span><br><span class="line">    //var a = 9;b=9;c=9</span><br><span class="line">    console.log(a);</span><br><span class="line">    console.log(b);</span><br><span class="line">    console.log(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><p>1、构造函数语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function 构造函数名(值,) &#123;</span><br><span class="line">    this.属性 = 值;</span><br><span class="line">    this.方法 = function(形参) &#123;&#125;</span><br><span class="line">&#125;//定义</span><br><span class="line">new 构造函数名();//调用</span><br></pre></td></tr></table></figure><p>2、遍历对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(var k in obj) &#123;</span><br><span class="line">    console.log(k);//属性名</span><br><span class="line">    console.log(obj[k]);//属性值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、var date = new Date(‘20222-7-2 8:8:8’);<br>4、var date1 = +new Date(); // 返回距离 1970.1.1 的总毫秒数<br>H5 语法:Date.now()<br>案例：倒计时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">        function countDown(time) &#123;</span><br><span class="line">            var now = +new Date();</span><br><span class="line">            var input = +new Date(time);</span><br><span class="line">            var t = (input - now) / 1000;</span><br><span class="line">            var day = parseInt(t / 60 / 60 / 24);</span><br><span class="line">            day = day == 0 ? &#x27;0&#x27; + day : day;</span><br><span class="line">            var hour = parseInt(t / 60 / 60 % 24);</span><br><span class="line">            hour = hour == 0 ? &#x27;0&#x27; + hour : hour;</span><br><span class="line">            var min = parseInt(t / 60 % 60);</span><br><span class="line">            min = min == 0 ? &#x27;0&#x27; + min : min;</span><br><span class="line">            var sec = parseInt(t % 60);</span><br><span class="line">            sec = sec == 0 ? &#x27;0&#x27; + sec : sec;</span><br><span class="line">            var res = day + &#x27;天:&#x27; + hour + &#x27;小时:&#x27; + min + &#x27;分钟:&#x27; + sec+&#x27;秒&#x27;;</span><br><span class="line">            return res;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(countDown(&#x27;2022-7-2 18:0:0&#x27;));</span><br><span class="line">数组对象</span><br></pre></td></tr></table></figure><p>5、arr instanceof Array 运算符 检测是否为数组<br>H5 语法:Array.isArray(arr)<br>6、arr.push() 尾部添加，返回长度<br>arr.unshift() 头部添加，返回长度<br>arr.pop() 尾部删除，返回删除元素<br>arr.shift() 头部删除，返回删除元素<br>7、arr.sort()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.sort(function(a,b)&#123;</span><br><span class="line">    return a-b;//降序：b-a</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>8、arr.indexOf()<br>案例：去重</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var arr = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;a&#x27;];</span><br><span class="line"></span><br><span class="line">        function checkDouble(arr) &#123;</span><br><span class="line">            var newArr = [];</span><br><span class="line">            for (var i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">                if (newArr.indexOf(arr[i]) == -1) newArr.push(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            return newArr;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(checkDouble(arr));</span><br></pre></td></tr></table></figure><p>9、arr.toString() arr.join(分隔符)<br>10、arr.splice() 删除<br>11、arr.concat() 合并</p><h2 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h2><p>1、str.indexOf(c,start)<br>案例：统计重复字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var str = &#x27;abcdoedefgoefdoeafao&#x27;;</span><br><span class="line">        var index = str.indexOf(&#x27;o&#x27;);</span><br><span class="line">        var cnt = 0;</span><br><span class="line">        while (index != -1) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            console.log(index);</span><br><span class="line">            index = str.indexOf(&#x27;o&#x27;, index + 1);</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(cnt);</span><br></pre></td></tr></table></figure><p>2、str.charAt(index) 返回该位置的元素<br>str.charCodeAt(index) 返回对应的 ASCII 码<br>案例：统计出现最多的字符和次数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var str = &#x27;abcdoodfegoefdeafaeze&#x27;;</span><br><span class="line">        var obj = &#123;&#125;;</span><br><span class="line">        for (var i = 0; i &lt; str.length; i++) &#123;</span><br><span class="line">            var chars = str.charAt(i)</span><br><span class="line">            if (obj[chars]) &#123;</span><br><span class="line">                obj[chars]++;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                obj[chars] = 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        var max = 0;</span><br><span class="line">        var c = &#x27;&#x27;;</span><br><span class="line">        for (k in obj) &#123;</span><br><span class="line">            if (obj[k] &gt; max) &#123;</span><br><span class="line">                max = obj[k];</span><br><span class="line">                c = k;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        console.log(c);</span><br><span class="line">        console.log(obj[c]);</span><br></pre></td></tr></table></figure><p>3、str.substr(start,length)<br>str.slice(startindex,endindex)<br>str.split(‘分隔符’) 字符串转换成数组</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>css</title>
      <link href="/2022/11/09/%E7%AC%AC%E5%85%AD%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E5%85%AD%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="web-应用课-css"><a href="#web-应用课-css" class="headerlink" title="web 应用课: css"></a>web 应用课: css</h2><h2 id="一-样式定义方式"><a href="#一-样式定义方式" class="headerlink" title="一. 样式定义方式"></a>一. 样式定义方式</h2><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表:"></a>内部样式表:</h3><p>一般写在 head, 但也可以写在任意位置, 只要在应用区域之前即可</p><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>在 css 文件:<br>p {<br>width: 50px;<br>}</p><p>.big {<br>width: 500px;<br>}<br>在 html 文件:<br>注意: 这里的 href, 最好自己手打, 直接复制容易出现 css 外部样式怎么都不显示的情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/style.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="二-选择器"><a href="#二-选择器" class="headerlink" title="二. 选择器"></a>二. 选择器</h2><h3 id="1-伪类选择器"><a href="#1-伪类选择器" class="headerlink" title="1.伪类选择器:"></a>1.伪类选择器:</h3><p>应该叫状态选择器:</p><p>有没有被选中, 有没有被点击, 有没有被长按, 等等</p><p>位置,</p><p>当前链接链接跳转</p><h3 id="2-通配符选择器"><a href="#2-通配符选择器" class="headerlink" title="2. 通配符选择器:"></a>2. 通配符选择器:</h3><p>应该叫属性选择器: 查看是否具有某些属性, 也可以是选择全部</p><h3 id="3-伪元素选择器"><a href="#3-伪元素选择器" class="headerlink" title="3. .伪元素选择器:"></a>3. .伪元素选择器:</h3><p>应该叫内容选择器: 修改添加第一或者最后一个字, 等等</p><h2 id="三-颜色"><a href="#三-颜色" class="headerlink" title="三. 颜色"></a>三. 颜色</h2><p>屏幕颜色都是由 R(红)G(绿)B(蓝)组成, 每一种取 0<del>255, 16 位数(二进制)可以拆成两个 8 位数(0</del>16),</p><p>11, 12, 13, 14, 15 分别用 A, B, C, D, E, F 表示, 总共 6 位</p><h2 id="四-文本及其他-块"><a href="#四-文本及其他-块" class="headerlink" title="四. 文本及其他(块)"></a>四. 文本及其他(块)</h2><h3 id="1-利用行高实现垂直居中"><a href="#1-利用行高实现垂直居中" class="headerlink" title="1. 利用行高实现垂直居中:"></a>1. 利用行高实现垂直居中:</h3><p>每个字都是写在每一行中间, 当设置行高等于字所在 div(块)的高度时, 便可实现居中</p><h3 id="2-实现多个样式"><a href="#2-实现多个样式" class="headerlink" title="2. 实现多个样式:"></a>2. 实现多个样式:</h3><p>逗号隔开, 分号结尾, 这里举例文字阴影:</p><p>div{<br>text-show: -5px -5px 2px grey,<br>5px -5px 2px red;<br>}</p><h3 id="3-em-与-的区别"><a href="#3-em-与-的区别" class="headerlink" title="3. em 与 % 的区别:"></a>3. em 与 % 的区别:</h3><p>%如果是最外的 div 那么, 此时父元素指的是 body</p><p>在文本中区别不大, 但是在”块”中区别比较大, 例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;height: 5em; background-color: aqua;&quot;&gt;</span><br><span class="line">        第一</span><br><span class="line">        &lt;div style=&quot;height: 200%; background-color: black;&quot;&gt;</span><br><span class="line">            第二</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot;height: 5em; background-color: aqua;&quot;&gt;</span><br><span class="line">        第一</span><br><span class="line">        &lt;div style=&quot;height: 2em; background-color: black;&quot;&gt;</span><br><span class="line">            第二</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="五-字体"><a href="#五-字体" class="headerlink" title="五. 字体"></a>五. 字体</h2><h2 id="六-背景"><a href="#六-背景" class="headerlink" title="六. 背景"></a>六. 背景</h2><h3 id="1-可以添加多张图片"><a href="#1-可以添加多张图片" class="headerlink" title="1. 可以添加多张图片:"></a>1. 可以添加多张图片:</h3><p>添加逗号隔开</p><h3 id="2-设置背景图片大小"><a href="#2-设置背景图片大小" class="headerlink" title="2. 设置背景图片大小:"></a>2. 设置背景图片大小:</h3><p>可以用百分比, 默认位置是左上角;</p><p>全覆盖: cover: 宽高取 max, contain: 宽高取 min, %: 自动拉伸</p><p>设置透明度: 除了 rgba, 还可以设置 opacity 的值</p><h2 id="七-边框"><a href="#七-边框" class="headerlink" title="七. 边框"></a>七. 边框</h2><h3 id="1-分别设置各边"><a href="#1-分别设置各边" class="headerlink" title="1.分别设置各边:"></a>1.分别设置各边:</h3><p>四个参数: 对应上右下左</p><p>两个参数: 对应上右, 没有的取对边</p><p>三个参数:对应上右下, 没有的取对边</p><p>一个参数: 指全部</p><h3 id="2-设置圆角"><a href="#2-设置圆角" class="headerlink" title="2. 设置圆角:"></a>2. 设置圆角:</h3><p>多少 px, 是指以多少 px 为半径, %同理; 四角顺序则是:0, 1, 2, 3</p><h2 id="八-元素展示格式"><a href="#八-元素展示格式" class="headerlink" title="八. 元素展示格式"></a>八. 元素展示格式</h2><h2 id="九-内边距与外边距"><a href="#九-内边距与外边距" class="headerlink" title="九. 内边距与外边距"></a>九. 内边距与外边距</h2><h3 id="1-分别设置各边-1"><a href="#1-分别设置各边-1" class="headerlink" title="1.分别设置各边:"></a>1.分别设置各边:</h3><p>四个参数: 对应上右下左</p><p>两个参数: 对应上右, 没有的取对边</p><p>三个参数:对应上右下, 没有的取对边</p><p>一个参数: 指全部</p><p>参数如果是%, 则表示的是父元素宽度的百分比</p><h3 id="2-外边距-“塌陷”解决方法"><a href="#2-外边距-“塌陷”解决方法" class="headerlink" title="2.外边距 “塌陷”解决方法:"></a>2.外边距 “塌陷”解决方法:</h3><p>(1)父元素没有上边框和 padding 时，后代元素的 margin-top 会溢出:<br>① border-top: 1px solid;</p><p>② padding-top: 1px;</p><p>③ overflow hiden;</p><p>④ 加上一个伪元素: (最佳)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.div-outer::before&#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2)相邻上下元素, 上面元素有下边的外边距, 下面元素有上边的外边距:<br>如图: 上下边距会取 max</p><p>解决方法: 定好以下边距为主, 即上下设置边距, 仅设置下边距</p><p>左右不会出现这种重叠的情况, 只会相加</p><h3 id="3-外边距-auto-实现不了竖直居中"><a href="#3-外边距-auto-实现不了竖直居中" class="headerlink" title="3. 外边距 auto 实现不了竖直居中:"></a>3. 外边距 auto 实现不了竖直居中:</h3><p>margin: auto;</p><p>四方向都用 auto, 只能实现水平居中</p><h3 id="4-矩形默认模型下-宽度计算方法"><a href="#4-矩形默认模型下-宽度计算方法" class="headerlink" title="4. 矩形默认模型下, 宽度计算方法:"></a>4. 矩形默认模型下, 宽度计算方法:</h3><p>宽度 = 块宽度 + 内边距 + 边框</p><p>width = content + padding + border</p><h2 id="十-盒子模型"><a href="#十-盒子模型" class="headerlink" title="十. 盒子模型"></a>十. 盒子模型</h2><h2 id="十一-位置"><a href="#十一-位置" class="headerlink" title="十一. 位置"></a>十一. 位置</h2><p>sticky:<br>课程视频: 47 : 36 ~ 50 : 50</p><h2 id="十二-浮动"><a href="#十二-浮动" class="headerlink" title="十二. 浮动"></a>十二. 浮动</h2><h3 id="1-作用"><a href="#1-作用" class="headerlink" title="1. 作用:"></a>1. 作用:</h3><p>与 display: inline-block;的功能一样, 都是让 ‘块’ 自动补齐一行;</p><p>但是与 display: inline-block;不同的是,</p><p>display: inline-block;块与块之间会有空隙:</p><p>而 float 则不会有这样的影响:</p><h3 id="2-float-参数"><a href="#2-float-参数" class="headerlink" title="2. float 参数:"></a>2. float 参数:</h3><p>left: 浮动, 且左对齐</p><p>right: 浮动, 且右对齐</p><h3 id="3-clear"><a href="#3-clear" class="headerlink" title="3. clear:"></a>3. clear:</h3><p>某个 ‘块’ 受到其他浮动块影响时使用</p><p>clear 前: clear 后:</p><h2 id="十三-flex-布局"><a href="#十三-flex-布局" class="headerlink" title="十三. flex 布局"></a>十三. flex 布局</h2><h3 id="1-css-默认摆放"><a href="#1-css-默认摆放" class="headerlink" title="1. css 默认摆放:"></a>1. css 默认摆放:</h3><p>从左到右沿主轴摆放, 不换行.</p><p>如下: 从左到右称为主轴, 从上到下称为交叉轴 (块轴)(侧轴)</p><h3 id="2-align-items"><a href="#2-align-items" class="headerlink" title="2. align-items:"></a>2. align-items:</h3><p>(1) flex-start: (上对齐)</p><p>(2) flex-end: (下对齐)<br>(3)center: (所有行均匀分布在中间)</p><h3 id="3-align-items-与-align-content-的区别"><a href="#3-align-items-与-align-content-的区别" class="headerlink" title="3. align-items 与 align-content 的区别:"></a>3. align-items 与 align-content 的区别:</h3><p>记忆: items 行与行均匀分布, content 则不均匀</p><p>体现如下:</p><p>(1) items: content:</p><p>(2) items:</p><p>content: (居中效果消失)</p><h3 id="4-flex-实现水平-竖直居中"><a href="#4-flex-实现水平-竖直居中" class="headerlink" title="4. flex 实现水平, 竖直居中:"></a>4. flex 实现水平, 竖直居中:</h3><p>(1) 之前办法:</p><p>margin: 0 auto; /<em>水平居中</em>/<br>position: relative;<br>top: 50%;<br>transfrom: translateY(50%); /<em>竖直居中</em>/<br>原理:</p><p>(2) flex 实现:</p><p>display: flex;<br>justify-content: center;<br>align-items: center;</p><h3 id="5-flex-grow-与-flex-shrink"><a href="#5-flex-grow-与-flex-shrink" class="headerlink" title="5. flex-grow 与 flex-shrink:"></a>5. flex-grow 与 flex-shrink:</h3><p>表示放大与缩小速度, 与比例有关, 取非负值, 小数也可以;</p><p>例如 flex-grow 红块 1,绿块 0.1:</p><h3 id="6-flex-basis"><a href="#6-flex-basis" class="headerlink" title="6. flex-basis:"></a>6. flex-basis:</h3><p>调初始宽度的大小</p><h2 id="十四-响应式布局"><a href="#十四-响应式布局" class="headerlink" title="十四. 响应式布局"></a>十四. 响应式布局</h2><h3 id="1-当用计算去算-width-的-时"><a href="#1-当用计算去算-width-的-时" class="headerlink" title="1. 当用计算去算 width 的%时:"></a>1. 当用计算去算 width 的%时:</h3><p>width: calc(100% * x / y)</p><p>x: 占多少份, y: 一共分多少份</p><h3 id="2-使用-Bootstrap"><a href="#2-使用-Bootstrap" class="headerlink" title="2. 使用 Bootstrap"></a>2. 使用 Bootstrap</h3><p>(1) 下载并解压包</p><p>(2) 将内容写到<form></form>里</p><p>(3) 将一行分为 12 份 (因为 12 的因数比较多), 然后可以在 div 里写 class=”xx-n”,</p><p>xx 指大小, 有 xs, sm, md, lg, xl; 对应屏幕大小</p><p>n 指占多少份</p><p>(4) 例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">  &lt;div class=&quot;mb-3&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;exampleInputEmail1&quot; class=&quot;form-label&quot;&gt;Email address&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;email&quot; class=&quot;form-control&quot; id=&quot;exampleInputEmail1&quot; aria-describedby=&quot;emailHelp&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;emailHelp&quot; class=&quot;form-text&quot;&gt;We&#x27;ll never share your email with anyone else.&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;mb-3&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;exampleInputPassword1&quot; class=&quot;form-label&quot;&gt;Password&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;exampleInputPassword1&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;mb-3 form-check&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;exampleCheck1&quot;&gt;</span><br><span class="line">    &lt;label class=&quot;form-check-label&quot; for=&quot;exampleCheck1&quot;&gt;Check me out&lt;/label&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>html</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="没必要"><a href="#没必要" class="headerlink" title="没必要"></a>没必要</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux-tmux和vim</title>
      <link href="/2022/11/09/%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-tmux"><a href="#1-tmux" class="headerlink" title="1.tmux"></a>1.tmux</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">功能：</span><br><span class="line">    (1) 分屏。</span><br><span class="line">    (2) 允许断开Terminal连接后，继续运行进程。</span><br><span class="line">结构：</span><br><span class="line">    一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane。</span><br><span class="line">    实例：</span><br><span class="line">        tmux:</span><br><span class="line">            session 0:</span><br><span class="line">                window 0:</span><br><span class="line">                    pane 0</span><br><span class="line">                    pane 1</span><br><span class="line">                    pane 2</span><br><span class="line">                    ...</span><br><span class="line">                window 1</span><br><span class="line">                window 2</span><br><span class="line">                ...</span><br><span class="line">            session 1</span><br><span class="line">            session 2</span><br><span class="line">            ...</span><br><span class="line">操作：</span><br><span class="line">    (1) tmux：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。</span><br><span class="line">    (2) 按下Ctrl + a后手指松开，然后按%：将当前pane左右平分成两个pane。</span><br><span class="line">    (3) 按下Ctrl + a后手指松开，然后按&quot;（注意是双引号&quot;）：将当前pane上下平分成两个pane。</span><br><span class="line">    (4) Ctrl + d：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。</span><br><span class="line">    (5) 鼠标点击可以选pane。</span><br><span class="line">    (6) 按下ctrl + a后手指松开，然后按方向键：选择相邻的pane。</span><br><span class="line">    (7) 鼠标拖动pane之间的分割线，可以调整分割线的位置。</span><br><span class="line">    (8) 按住ctrl + a的同时按方向键，可以调整pane之间分割线的位置。</span><br><span class="line">    (9) 按下ctrl + a后手指松开，然后按z：将当前pane全屏/取消全屏。</span><br><span class="line">    (10) 按下ctrl + a后手指松开，然后按d：挂起当前session。</span><br><span class="line">    (11) tmux a：打开之前挂起的session。</span><br><span class="line">    (12) 按下ctrl + a后手指松开，然后按s：选择其它session。</span><br><span class="line">        方向键 —— 上：选择上一项 session/window/pane</span><br><span class="line">        方向键 —— 下：选择下一项 session/window/pane</span><br><span class="line">        方向键 —— 右：展开当前项 session/window</span><br><span class="line">        方向键 —— 左：闭合当前项 session/window</span><br><span class="line">    (13) 按下Ctrl + a后手指松开，然后按c：在当前session中创建一个新的window。</span><br><span class="line">    (14) 按下Ctrl + a后手指松开，然后按w：选择其他window，操作方法与(12)完全相同。</span><br><span class="line">    (15) 按下Ctrl + a后手指松开，然后按PageUp：翻阅当前pane内的内容。</span><br><span class="line">    (16) 鼠标滚轮：翻阅当前pane内的内容。</span><br><span class="line">    (17) 在tmux中选中文本时，需要按住shift键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）</span><br><span class="line">    (18) tmux中复制/粘贴文本的通用方式：</span><br><span class="line">        (1) 按下Ctrl + a后松开手指，然后按[</span><br><span class="line">        (2) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板</span><br><span class="line">        (3) 按下Ctrl + a后松开手指，然后按]，会将剪贴板中的内容粘贴到光标处</span><br></pre></td></tr></table></figure><p>2.vim</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">功能：</span><br><span class="line">    (1) 命令行模式下的文本编辑器。</span><br><span class="line">    (2) 根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。</span><br><span class="line">    (3) 使用方式：vim filename</span><br><span class="line">        如果已有该文件，则打开它。</span><br><span class="line">        如果没有该文件，则打开个一个新的文件，并命名为filename</span><br><span class="line">模式：</span><br><span class="line">    (1) 一般命令模式</span><br><span class="line">        默认模式。命令输入方式：类似于打游戏放技能，按不同字符，即可进行不同操作。可以复制、粘贴、删除文本等。</span><br><span class="line">    (2) 编辑模式</span><br><span class="line">        在一般命令模式里按下i，会进入编辑模式。</span><br><span class="line">        按下ESC会退出编辑模式，返回到一般命令模式。</span><br><span class="line">    (3) 命令行模式</span><br><span class="line">        在一般命令模式里按下:/?三个字母中的任意一个，会进入命令行模式。命令行在最下面。</span><br><span class="line">        可以查找、替换、保存、退出、配置编辑器等。</span><br><span class="line">操作：</span><br><span class="line">    (1) i：进入编辑模式</span><br><span class="line">    (2) ESC：进入一般命令模式</span><br><span class="line">    (3) h 或 左箭头键：光标向左移动一个字符</span><br><span class="line">    (4) j 或 向下箭头：光标向下移动一个字符</span><br><span class="line">    (5) k 或 向上箭头：光标向上移动一个字符</span><br><span class="line">    (6) l 或 向右箭头：光标向右移动一个字符</span><br><span class="line">    (7) n&lt;Space&gt;：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符</span><br><span class="line">    (8) 0 或 功能键[Home]：光标移动到本行开头</span><br><span class="line">    (9) $ 或 功能键[End]：光标移动到本行末尾</span><br><span class="line">    (10) G：光标移动到最后一行</span><br><span class="line">    (11) :n 或 nG：n为数字，光标移动到第n行</span><br><span class="line">    (12) gg：光标移动到第一行，相当于1G</span><br><span class="line">    (13) n&lt;Enter&gt;：n为数字，光标向下移动n行</span><br><span class="line">    (14) /word：向光标之下寻找第一个值为word的字符串。</span><br><span class="line">    (15) ?word：向光标之上寻找第一个值为word的字符串。</span><br><span class="line">    (16) n：重复前一个查找操作</span><br><span class="line">    (17) N：反向重复前一个查找操作</span><br><span class="line">    (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2</span><br><span class="line">    (19) :1,$s/word1/word2/g：将全文的word1替换为word2</span><br><span class="line">    (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。</span><br><span class="line">    (21) v：选中文本</span><br><span class="line">    (22) d：删除选中的文本</span><br><span class="line">    (23) dd: 删除当前行</span><br><span class="line">    (24) y：复制选中的文本</span><br><span class="line">    (25) yy: 复制当前行</span><br><span class="line">    (26) p: 将复制的数据在光标的下一行/下一个位置粘贴</span><br><span class="line">    (27) u：撤销</span><br><span class="line">    (28) Ctrl + r：取消撤销</span><br><span class="line">    (29) 大于号 &gt;：将选中的文本整体向右缩进一次</span><br><span class="line">    (30) 小于号 &lt;：将选中的文本整体向左缩进一次</span><br><span class="line">    (31) :w 保存</span><br><span class="line">    (32) :w! 强制保存</span><br><span class="line">    (33) :q 退出</span><br><span class="line">    (34) :q! 强制退出</span><br><span class="line">    (35) :wq 保存并退出</span><br><span class="line">    (36) :set paste 设置成粘贴模式，取消代码自动缩进</span><br><span class="line">    (37) :set nopaste 取消粘贴模式，开启代码自动缩进</span><br><span class="line">    (38) :set nu 显示行号</span><br><span class="line">    (39) :set nonu 隐藏行号</span><br><span class="line">    (40) gg=G：将全文代码格式化</span><br><span class="line">    (41) :noh 关闭查找关键词高亮</span><br><span class="line">    (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令</span><br><span class="line">异常处理：</span><br><span class="line">    每次用vim编辑文件时，会自动创建一个.filename.swp的临时文件。</span><br><span class="line">    如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种：</span><br><span class="line">        (1) 找到正在打开该文件的程序，并退出</span><br><span class="line">        (2) 直接删掉该swp文件即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux-常用文件管理命令</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-常用文件管理命令"><a href="#1-常用文件管理命令" class="headerlink" title="1.常用文件管理命令"></a>1.常用文件管理命令</h2><h3 id="1-Ctrl-c-取消命令，并且换行"><a href="#1-Ctrl-c-取消命令，并且换行" class="headerlink" title="(1).Ctrl + c : 取消命令，并且换行"></a>(1).<code>Ctrl + c</code> : 取消命令，并且换行</h3><h3 id="2-Ctrl-u-清空本行命令"><a href="#2-Ctrl-u-清空本行命令" class="headerlink" title="(2).Ctrl + u : 清空本行命令"></a>(2).<code>Ctrl + u</code> : 清空本行命令</h3><h3 id="3-tab-可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项"><a href="#3-tab-可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项" class="headerlink" title="(3).tab : 可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项"></a>(3).<code>tab</code> : 可以补全命令和文件名，如果补全不了快速按两下<code>tab</code>键，可以显示备选选项</h3><h3 id="4-ls-列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件"><a href="#4-ls-列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件" class="headerlink" title="(4).ls :列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件"></a>(4).<code>ls</code> :列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件</h3><blockquote><p>●ㅤ<code>ls -a</code> : 查看所有文件包括隐藏文件（以<code>.</code>开头的文件就是隐藏文件）<br>●ㅤ<code>ls -A</code> : 当前目录，不显示上层目录<br>●ㅤ<code>ls -l</code> : 查看当前路径下文件详细信息</p></blockquote><h3 id="5-pwd-显示当前路径"><a href="#5-pwd-显示当前路径" class="headerlink" title="(5).pwd : 显示当前路径"></a>(5).<code>pwd</code> : 显示当前路径</h3><h3 id="6-cd-XXX-进入XXX目录下，cd-返回上层目录"><a href="#6-cd-XXX-进入XXX目录下，cd-返回上层目录" class="headerlink" title="(6).cd XXX : 进入XXX目录下，cd ..返回上层目录"></a>(6).<code>cd XXX</code> : 进入<code>XXX</code>目录下，<code>cd ..</code>返回上层目录</h3><blockquote><p>●ㅤ<code>.</code>：当前目录 <code>..</code>：上级目录<br>●ㅤ<code>~</code>：家目录，回到路径<code>/home/acs</code>下<br>●ㅤ<code>cd -</code>：返回改变路径前的路径，比如当前在<code>/home/acs/homework</code>然后<code>cd** **/</code>这个时候就处于<code>/</code>目录下，然后<code>cd -</code>就会回到改变路径前的路径也就是<code>/home/acs/homework</code></p></blockquote><h3 id="7-cp-a-XXX-YYY-将XXX文件复制到YYY，XXX和YYY可以是同一个路径，比如-dir-c-a-txt，表示上层目录下的dir-c文件夹下的文件a-txt"><a href="#7-cp-a-XXX-YYY-将XXX文件复制到YYY，XXX和YYY可以是同一个路径，比如-dir-c-a-txt，表示上层目录下的dir-c文件夹下的文件a-txt" class="headerlink" title="(7).cp a/XXX YYY : 将XXX文件复制到YYY，XXX和YYY可以是同一个路径，比如../dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt"></a>(7).<code>cp a/XXX YYY</code> : 将<code>XXX</code>文件复制到<code>YYY</code>，<code>XXX</code>和<code>YYY</code>可以是同一个路径，比如<code>../dir_c/a.txt</code>，表示上层目录下的<code>dir_c</code>文件夹下的文件<code>a.txt</code></h3><blockquote><p>●ㅤ<code>cp XXX YYY -r</code>：将<code>XXX</code>目录（文件夹）复制到<code>YYY</code>下<br>●ㅤ<code>cp a.txt ../b.txt</code>：非当前路径重命名方法</p></blockquote><h3 id="8-mkdir-XXX：创建目录（文件夹）XXX"><a href="#8-mkdir-XXX：创建目录（文件夹）XXX" class="headerlink" title="(8).mkdir XXX：创建目录（文件夹）XXX"></a>(8).<code>mkdir XXX</code>：创建目录（文件夹）<code>XXX</code></h3><blockquote><p>●ㅤ<code>mkdir -p</code> : 如果文件夹不存在，则创建</p></blockquote><h3 id="9-rm-XXX：删除普通文件；-rm-XXX-r：删除文件夹"><a href="#9-rm-XXX：删除普通文件；-rm-XXX-r：删除文件夹" class="headerlink" title="(9).rm XXX：删除普通文件； rm XXX -r：删除文件夹"></a>(9).<code>rm XXX</code>：删除普通文件； <code>rm XXX -r</code>：删除文件夹</h3><blockquote><p>●<code>rm *.txt</code> : 支持正则表达式，删除所有<code>.txt</code>类型文件<br>●<code>rm *</code> : 删除所有文件(不包括文件夹)<br>●<code>rm * -r</code> : 删除所有文件夹</p></blockquote><h3 id="10-mv-XXX-YYY：将XXX文件移动到YYY下，和cp命令一样，XXX和YYY可以是同一个路径；重命名也是用这个命令"><a href="#10-mv-XXX-YYY：将XXX文件移动到YYY下，和cp命令一样，XXX和YYY可以是同一个路径；重命名也是用这个命令" class="headerlink" title="(10).mv XXX YYY：将XXX文件移动到YYY下，和cp命令一样，XXX和YYY可以是同一个路径；重命名也是用这个命令"></a>(10).<code>mv XXX YYY</code>：将<code>XXX</code>文件移动到<code>YYY</code>下，和<code>cp</code>命令一样，<code>XXX</code>和<code>YYY</code>可以是同一个路径；重命名也是用这个命令</h3><blockquote><p>●<code>mv a.txt ../b.txt</code> : 非当前路径移动方法</p></blockquote><h3 id="11-touch-XXX-创建一个文件"><a href="#11-touch-XXX-创建一个文件" class="headerlink" title="(11).touch XXX : 创建一个文件"></a>(11).<code>touch XXX</code> : 创建一个文件</h3><h3 id="12-cat-XXX-展示文件-XXX-中的内容"><a href="#12-cat-XXX-展示文件-XXX-中的内容" class="headerlink" title="(12).cat XXX : 展示文件 XXX 中的内容"></a>(12).<code>cat XXX</code> : 展示文件 XXX 中的内容</h3><h3 id="13-复制文本-windows-Linux下：Ctrl-insert，Mac下：command-c"><a href="#13-复制文本-windows-Linux下：Ctrl-insert，Mac下：command-c" class="headerlink" title="(13).复制文本 : windows/Linux下：Ctrl + insert，Mac下：command + c"></a>(13).复制文本 : <code>windows/Linux</code>下：<code>Ctrl + insert</code>，<code>Mac</code>下：<code>command + c</code></h3><h3 id="14-粘贴文本-windows-Linux下：Shift-insert，Mac下：command-v"><a href="#14-粘贴文本-windows-Linux下：Shift-insert，Mac下：command-v" class="headerlink" title="(14).粘贴文本 : windows/Linux下：Shift + insert，Mac下：command + v"></a>(14).粘贴文本 : <code>windows/Linux</code>下：<code>Shift + insert</code>，<code>Mac</code>下：<code>command + v</code></h3><h3 id="15-history-查看历史输入指令"><a href="#15-history-查看历史输入指令" class="headerlink" title="(15).history : 查看历史输入指令"></a>(15).<code>history</code> : 查看历史输入指令</h3><h3 id="16-tree-以树形显示文件目录结构"><a href="#16-tree-以树形显示文件目录结构" class="headerlink" title="(16).tree : 以树形显示文件目录结构"></a>(16).<code>tree</code> : 以树形显示文件目录结构</h3><h2 id="习题课"><a href="#习题课" class="headerlink" title="习题课"></a>习题课</h2><h3 id="0-进入-homework-0-文件夹，分别创建文件夹-dir-a-dir-b-dir-c"><a href="#0-进入-homework-0-文件夹，分别创建文件夹-dir-a-dir-b-dir-c" class="headerlink" title="(0) 进入 homework_0 文件夹，分别创建文件夹 dir_a, dir_b, dir_c"></a>(0) 进入 homework_0 文件夹，分别创建文件夹 dir_a, dir_b, dir_c</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd homework_0</span><br><span class="line">mkdir dir_a dir_b dir_c</span><br></pre></td></tr></table></figure><h3 id="1-进入-homework-1-文件夹，将-a-txt-b-txt-c-txt-分别复制成-a-txt-bak-b-txt-bak-c-txt-bak"><a href="#1-进入-homework-1-文件夹，将-a-txt-b-txt-c-txt-分别复制成-a-txt-bak-b-txt-bak-c-txt-bak" class="headerlink" title="(1) 进入 homework_1 文件夹，将 a.txt, b.txt, c.txt 分别复制成: a.txt.bak, b.txt.bak, c.txt.bak"></a>(1) 进入 homework_1 文件夹，将 a.txt, b.txt, c.txt 分别复制成: a.txt.bak, b.txt.bak, c.txt.bak</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd homework_1</span><br><span class="line">cp a.txt a.txt.bak</span><br><span class="line">cp b.txt b.txt.bak</span><br><span class="line">cp c.txt c.txt.bak</span><br></pre></td></tr></table></figure><h3 id="2-进入-homework-2-文件夹，将-a-txt-b-txt-c-txt-分别重命名为-a-new-txt-b-new-txt-c-new-txt"><a href="#2-进入-homework-2-文件夹，将-a-txt-b-txt-c-txt-分别重命名为-a-new-txt-b-new-txt-c-new-txt" class="headerlink" title="(2) 进入 homework_2 文件夹，将 a.txt, b.txt, c.txt 分别重命名为: a_new.txt, b_new.txt, c_new.txt"></a>(2) 进入 homework_2 文件夹，将 a.txt, b.txt, c.txt 分别重命名为: a_new.txt, b_new.txt, c_new.txt</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd homework_2</span><br><span class="line">mv a.txt a_new.txt</span><br><span class="line">mv b.txt b_new.txt</span><br><span class="line">mv c.txt c_new.txt</span><br></pre></td></tr></table></figure><h3 id="3-进入-homework-3-文件夹，将-dir-a-文件夹下的-a-txt-b-txt-c-txt-分别移动到文件夹-dir-b-下"><a href="#3-进入-homework-3-文件夹，将-dir-a-文件夹下的-a-txt-b-txt-c-txt-分别移动到文件夹-dir-b-下" class="headerlink" title="(3) 进入 homework_3 文件夹，将 dir_a 文件夹下的 a.txt, b.txt, c.txt 分别移动到文件夹 dir_b 下"></a>(3) 进入 homework_3 文件夹，将 dir_a 文件夹下的 a.txt, b.txt, c.txt 分别移动到文件夹 dir_b 下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd homework_3</span><br><span class="line">mv dir_a/* dir_b/</span><br></pre></td></tr></table></figure><h3 id="4-进入-homework-4-文件夹，将普通文件-a-txt-b-txt-c-txt-删除"><a href="#4-进入-homework-4-文件夹，将普通文件-a-txt-b-txt-c-txt-删除" class="headerlink" title="(4) 进入 homework_4 文件夹，将普通文件 a.txt, b.txt, c.txt 删除"></a>(4) 进入 homework_4 文件夹，将普通文件 a.txt, b.txt, c.txt 删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd homework_4</span><br><span class="line">rm a.txt b.txt c.txt</span><br><span class="line">// rm *</span><br></pre></td></tr></table></figure><h3 id="5-进入-homework-5-文件夹，将文件夹-dir-a-dir-b-dir-c-删除"><a href="#5-进入-homework-5-文件夹，将文件夹-dir-a-dir-b-dir-c-删除" class="headerlink" title="(5) 进入 homework_5 文件夹，将文件夹 dir_a, dir_b, dir_c 删除"></a>(5) 进入 homework_5 文件夹，将文件夹 dir_a, dir_b, dir_c 删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd homework_5</span><br><span class="line">rm dir_a dir_b dir_c -r</span><br><span class="line">// rm * -r</span><br></pre></td></tr></table></figure><h3 id="6-进入-homework-6-文件夹，查看-task-txt-的内容，并按其指示进行操作"><a href="#6-进入-homework-6-文件夹，查看-task-txt-的内容，并按其指示进行操作" class="headerlink" title="(6) 进入 homework_6 文件夹，查看 task.txt 的内容，并按其指示进行操作"></a>(6) 进入 homework_6 文件夹，查看 task.txt 的内容，并按其指示进行操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd homework_6</span><br><span class="line">cat task.txt</span><br><span class="line">mkdir dir_a</span><br><span class="line">mv task.txt dir_a/done.txt</span><br></pre></td></tr></table></figure><h3 id="7-进入-homework-7-文件夹，创建文件夹-dir-0-dir-1-dir-2，将-a-txt-b-txt-c-txt-复制到-dir-0-下，重命名为-a0-txt-b0-txt-c0-txt-将-a-txt-b-txt-c-txt-复制到-dir-1-下，重命名为-a1-txt-b1-txt-c1-txt-将-a-txt-b-txt-c-txt-复制到-dir-2-下，重命名为-a2-txt-b2-txt-c2-txt"><a href="#7-进入-homework-7-文件夹，创建文件夹-dir-0-dir-1-dir-2，将-a-txt-b-txt-c-txt-复制到-dir-0-下，重命名为-a0-txt-b0-txt-c0-txt-将-a-txt-b-txt-c-txt-复制到-dir-1-下，重命名为-a1-txt-b1-txt-c1-txt-将-a-txt-b-txt-c-txt-复制到-dir-2-下，重命名为-a2-txt-b2-txt-c2-txt" class="headerlink" title="(7) 进入 homework_7 文件夹，创建文件夹 dir_0, dir_1, dir_2，将 a.txt, b.txt, c.txt 复制到 dir_0 下，重命名为 a0.txt, b0.txt, c0.txt;将 a.txt, b.txt, c.txt 复制到 dir_1 下，重命名为 a1.txt, b1.txt, c1.txt;将 a.txt, b.txt, c.txt 复制到 dir_2 下，重命名为 a2.txt, b2.txt, c2.txt;"></a>(7) 进入 homework_7 文件夹，创建文件夹 dir_0, dir_1, dir_2，将 a.txt, b.txt, c.txt 复制到 dir_0 下，重命名为 a0.txt, b0.txt, c0.txt;将 a.txt, b.txt, c.txt 复制到 dir_1 下，重命名为 a1.txt, b1.txt, c1.txt;将 a.txt, b.txt, c.txt 复制到 dir_2 下，重命名为 a2.txt, b2.txt, c2.txt;</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd homework_7</span><br><span class="line">mkdir dir_0 dir_1 dir_2</span><br><span class="line"></span><br><span class="line">cp a.txt dir_0/a0.txt</span><br><span class="line">cp b.txt dir_0/b0.txt</span><br><span class="line">cp c.txt dir_0/c0.txt</span><br><span class="line"></span><br><span class="line">cp a.txt dir_1/a1.txt</span><br><span class="line">cp b.txt dir_1/b1.txt</span><br><span class="line">cp c.txt dir_1/c1.txt</span><br><span class="line"></span><br><span class="line">cp a.txt dir_2/a2.txt</span><br><span class="line">cp b.txt dir_2/b2.txt</span><br><span class="line">cp c.txt dir_2/c2.txt</span><br></pre></td></tr></table></figure><h3 id="8-进入-homework-8-文件夹，分别在-dir-a-dir-b-dir-c-文件夹下查看-task-txt-的内容，并分别按照指示进行操作"><a href="#8-进入-homework-8-文件夹，分别在-dir-a-dir-b-dir-c-文件夹下查看-task-txt-的内容，并分别按照指示进行操作" class="headerlink" title="(8) 进入 homework_8 文件夹，分别在 dir_a, dir_b, dir_c 文件夹下查看 task.txt 的内容，并分别按照指示进行操作"></a>(8) 进入 homework_8 文件夹，分别在 dir_a, dir_b, dir_c 文件夹下查看 task.txt 的内容，并分别按照指示进行操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd homework_8</span><br><span class="line"></span><br><span class="line">cd dir_a</span><br><span class="line">cat task.txt</span><br><span class="line">rm a.txt</span><br><span class="line"></span><br><span class="line">cd ../dir_b</span><br><span class="line">cat task.txt</span><br><span class="line">mv b.txt b_new.txt</span><br><span class="line"></span><br><span class="line">cd ../dir_c</span><br><span class="line">cat task.txt</span><br><span class="line">cp c.txt c.txt.bak</span><br></pre></td></tr></table></figure><h3 id="9-进入-homework-9-文件夹，将其中所有-txt-类型的文件删除"><a href="#9-进入-homework-9-文件夹，将其中所有-txt-类型的文件删除" class="headerlink" title="(9) 进入 homework_9 文件夹，将其中所有 txt 类型的文件删除"></a>(9) 进入 homework_9 文件夹，将其中所有 txt 类型的文件删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd homework_9</span><br><span class="line">rm *.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>朴素dijkstra算法</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="最短路问题"><a href="#最短路问题" class="headerlink" title="最短路问题"></a>最短路问题</h1><p><img src="https://cdn.acwing.com/media/article/image/2022/05/02/75349_17e3c4aac9-87eb6bc1eb975af8a5d5eababb97a74.png" alt="87eb6bc1eb975af8a5d5eababb97a74.png"></p><h3 id="朴素-dijkstra-算法-——-模板题-AcWing-849-Dijkstra-求最短路-I"><a href="#朴素-dijkstra-算法-——-模板题-AcWing-849-Dijkstra-求最短路-I" class="headerlink" title="朴素 dijkstra 算法 —— 模板题 AcWing 849. Dijkstra 求最短路 I"></a>朴素 dijkstra 算法 —— 模板题 <a href="https://www.acwing.com/problem/content/851/">AcWing 849. Dijkstra 求最短路 I</a></h3><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://www.acwing.com/activity/content/code/content/2269489/">题解</a></h3><p><strong>时间复杂是 O(n2+m)O(n2+m), n 表示点数，m 表示边数</strong> 1.用一个 dist 数组保存源点到其余各个节点的距离，dist[i] 表示源点到节点 i 的距离。初始时，dist 数组的各个元素为无穷大。<br>用一个状态数组 state 记录是否找到了源点到该节点的最短距离，state[i] 如果为真，则表示找到了源点到节点 i 的最短距离，state[i] 如果为假，则表示源点到节点 i 的最短距离还没有找到。初始时，state 各个元素为假。</p><p>2.源点到源点的距离为 0。即 dist[1] = 0。 3.遍历 dist 数组，找到一个节点，这个节点是：没有确定最短路径的节点中距离源点最近的点。假设该节点编号为 i。此时就找到了源点到该节点的最短距离，state[i] 置为 1。</p><p>4.遍历 i 所有可以到达的节点 j，如果 dist[j] 大于 dist[i] 加上 i -&gt; j 的距离，即 dist[j] &gt; dist[i] + w[i][j]（w[i][j] 为 i -&gt; j 的距离） ，则更新 dist[j] = dist[i] + w[i][j]。</p><p>5.重复 3 4 步骤，直到所有节点的状态都被置为 1。<br>此时 dist 数组中，就保存了源点到其余各个节点的最短距离。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">int g[N][N];  // 存储每条边</span><br><span class="line">int dist[N];  // 存储1号点到每个点的最短距离</span><br><span class="line">bool st[N];   // 存储每个点的最短路是否已经确定</span><br><span class="line"></span><br><span class="line">// 求1号点到n号点的最短路，如果不存在则返回-1</span><br><span class="line">int dijkstra()</span><br><span class="line">&#123;</span><br><span class="line">    memset(dist, 0x3f, sizeof dist);</span><br><span class="line">    dist[1] = 0;</span><br><span class="line"></span><br><span class="line">    for (int i = 0; i &lt; n - 1; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        int t = -1;     // 在还未确定最短路的点中，寻找距离最小的点</span><br><span class="line">        for (int j = 1; j &lt;= n; j ++ )</span><br><span class="line">            if (!st[j] &amp;&amp; (t == -1 || dist[t] &gt; dist[j]))</span><br><span class="line">                t = j;</span><br><span class="line"></span><br><span class="line">        // 用t更新其他点的距离</span><br><span class="line">        for (int j = 1; j &lt;= n; j ++ )</span><br><span class="line">            dist[j] = min(dist[j], dist[t] + g[t][j]);</span><br><span class="line"></span><br><span class="line">        st[t] = true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (dist[n] == 0x3f3f3f3f) return -1;</span><br><span class="line">    return dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搜索学习笔记</title>
      <link href="/2022/11/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-BFS"><a href="#1-BFS" class="headerlink" title="1.BFS"></a>1.BFS</h1><p><strong>·</strong>求最小问题<br><strong>·</strong>基于迭代（不会爆栈）</p><h3 id="模型一：Flood-Fill-算法"><a href="#模型一：Flood-Fill-算法" class="headerlink" title="模型一：Flood Fill 算法"></a>模型一：Flood Fill 算法</h3><p>在线性的时间找到某个点的连通块<br><a href="https://www.acwing.com/problem/content/1099/">1097. 池塘计数</a><br><a href="https://www.acwing.com/activity/content/code/content/2302485/">池塘计数题解</a></p><p><a href="https://www.acwing.com/problem/content/1100/">1098. 城堡问题</a><br><a href="https://www.acwing.com/activity/content/code/content/3339754/">城堡问题题解</a></p><p><a href="https://www.acwing.com/problem/content/1108/">1106. 山峰和山谷</a><br><a href="https://www.acwing.com/activity/content/code/content/3340854/">山峰和山谷题解</a></p><h3 id="模型二：最短路模型"><a href="#模型二：最短路模型" class="headerlink" title="模型二：最短路模型"></a>模型二：最短路模型</h3><p><a href="https://www.acwing.com/problem/content/description/1078/">1076. 迷宫问题</a><br><a href="https://www.acwing.com/activity/content/code/content/2619456/">迷宫问题题解</a></p><p><a href="https://www.acwing.com/problem/content/190/">188. 武士风度的牛</a><br><a href="https://www.acwing.com/activity/content/code/content/2619668/">武士风度的牛题解</a></p><p><a href="https://www.acwing.com/problem/content/1102/">1100. 抓住那头牛</a><br><a href="https://www.acwing.com/activity/content/code/content/2620046/">抓住那头牛题解</a></p><h3 id="模型三：多源-BFS"><a href="#模型三：多源-BFS" class="headerlink" title="模型三：多源 BFS"></a>模型三：多源 BFS</h3><p><a href="https://">173. 矩阵距离</a><br><a href="https://www.acwing.com/activity/content/code/content/2623686/">矩阵距离题解</a></p><h2 id="2022-4-29-打卡"><a href="#2022-4-29-打卡" class="headerlink" title="2022-4-29 打卡"></a>2022-4-29 打卡</h2><h3 id="模型四：最小步数模型"><a href="#模型四：最小步数模型" class="headerlink" title="模型四：最小步数模型"></a>模型四：最小步数模型</h3><p><a href="https://www.acwing.com/problem/content/1109/">1107. 魔板</a><br><a href="https://www.acwing.com/activity/content/code/content/3346107/">魔板题解</a></p><h3 id="模型五：双端队列广搜"><a href="#模型五：双端队列广搜" class="headerlink" title="模型五：双端队列广搜"></a>模型五：双端队列广搜</h3><p>将权值为 0 存入对头，权值为 1 存入队尾<br><a href="https://www.acwing.com/problem/content/177/">175. 电路维修</a><br><a href="https://www.acwing.com/activity/content/code/content/3346618/">电路维修题解</a></p><h3 id="模型六：双向广搜"><a href="#模型六：双向广搜" class="headerlink" title="模型六：双向广搜"></a>模型六：双向广搜</h3><p>作者：yxc<br>(BFS,双向 BFS) O((LN)5)O((LN)5)<br>假设每次决策数量是 KK，那么如果直接 BFS，最坏情况下的搜索空间是 K10K10，非常大，所以会 TLE 或者 MLE。</p><p>如果采用双向 BFS，则可以把搜索空间降到 2K52K5。在实际测试中只需 20ms 左右，剪枝效果很好。</p><p>BFS 的扩展方式是：分别枚举在原字符串中使用替换规则的起点，和所使用的的替换规则。</p><p>时间复杂度<br>假设字符串长度是 LL，替换规则一共有 NN 个，则：</p><p>在最坏情况下每次会从字符串的每个位置开始，使用全部的 NN 种替换规则，因此总共会有 LNLN 种扩展方式，从起点和终点最多会分别扩展 5 步，因此总搜索空间是 2(LN)52(LN)5。</p><p>在 BFS 过程中，空间中的每个状态只会被遍历一次，因此时间复杂度是 O((LN)5)O((LN)5)。</p><p><a href="https://www.acwing.com/problem/content/192/">190. 字串变换</a><br><a href="https://www.acwing.com/activity/content/code/content/3347965/">字串变换题解</a></p><h3 id="模型七：A"><a href="#模型七：A" class="headerlink" title="模型七：A*"></a>模型七：A*</h3><p><strong>麻了，没太明白，先放一下，最后回来解决</strong><br>大佬写的真好，从广搜到 Dijkstra 的算法到 A*算法<a href="https://www.redblobgames.com/pathfinding/a-star/introduction.html">A*算法简介</a><br><a href="https://www.acwing.com/problem/content/180/">178. 第 K 短路</a></p><p><a href="https://www.acwing.com/problem/content/181/">179. 八数码</a></p><h1 id="2-DFS"><a href="#2-DFS" class="headerlink" title="2.DFS"></a>2.DFS</h1><h3 id="模型一：DFS-之连通性模型"><a href="#模型一：DFS-之连通性模型" class="headerlink" title="模型一：DFS 之连通性模型"></a>模型一：DFS 之连通性模型</h3><p><a href="https://www.acwing.com/problem/content/description/1114/">1112. 迷宫</a><br><a href="https://www.acwing.com/activity/content/code/content/3348834/">迷宫题解</a></p><p><a href="https://www.acwing.com/problem/content/1115/">1113. 红与黑</a><br>n 和 m 是真的恶心<br><a href="https://www.acwing.com/activity/content/code/content/3349118/">红与黑题解</a></p><h2 id="2022-4-30-打卡"><a href="#2022-4-30-打卡" class="headerlink" title="2022-4-30 打卡"></a>2022-4-30 打卡</h2><h3 id="模型二：DFS-之搜索顺序"><a href="#模型二：DFS-之搜索顺序" class="headerlink" title="模型二：DFS 之搜索顺序"></a>模型二：DFS 之搜索顺序</h3><p><a href="https://www.acwing.com/problem/content/1118/">1116. 马走日</a><br><a href="https://www.acwing.com/activity/content/code/content/3360481/">马走日题解</a></p><p><a href="https://www.acwing.com/problem/content/1119/">1117. 单词接龙</a><br><a href="https://www.acwing.com/activity/content/code/content/3362819/">单词接龙题解</a></p><p><a href="https://www.acwing.com/problem/content/1120/">1118. 分成互质组</a><br><a href="https://www.acwing.com/activity/content/code/content/3363143/">分成互质组题解</a></p><h2 id="2022-5-1-打卡"><a href="#2022-5-1-打卡" class="headerlink" title="2022-5-1 打卡"></a>2022-5-1 打卡</h2><h3 id="模型三：DFS-之剪枝与优化"><a href="#模型三：DFS-之剪枝与优化" class="headerlink" title="模型三：DFS 之剪枝与优化"></a>模型三：DFS 之剪枝与优化</h3><p><a href="https://www.acwing.com/problem/content/167/">165. 小猫爬山</a></p><p><a href="https://www.acwing.com/problem/content/168/">166. 数独</a></p><p><a href="https://www.acwing.com/problem/content/169/">167. 木棒</a></p><p><a href="https://www.acwing.com/problem/content/170/">168. 生日蛋糕</a></p><h3 id="模型四：迭代加深"><a href="#模型四：迭代加深" class="headerlink" title="模型四：迭代加深"></a>模型四：迭代加深</h3><p><a href="https://www.acwing.com/problem/content/172/">170. 加成序列</a></p><h3 id="模型五：双向-DFS"><a href="#模型五：双向-DFS" class="headerlink" title="模型五：双向 DFS"></a>模型五：双向 DFS</h3><p><a href="https://www.acwing.com/problem/content/173/">171. 送礼物</a></p><h3 id="模型六：IDA"><a href="#模型六：IDA" class="headerlink" title="模型六：IDA*"></a>模型六：IDA*</h3><p><a href="https://www.acwing.com/problem/content/182/">180. 排书</a></p><p><a href="https://www.acwing.com/problem/content/183/">181. 回转游戏</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
